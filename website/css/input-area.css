.input-bg, .input-overlay {
    grid-area: 3 / 2 / 4 / 4;
    border-radius: var(--input-border-radius);
}

.input-bg {
    z-index: 1;
    background-color: var(--input-background-color);
    box-shadow: 0 0 3px rgba(var(--shadow-color), var(--shadow-opacity)),
    0 0 1px rgba(var(--shadow-color), calc(var(--shadow-opacity) * 2 / 3));
    transition: box-shadow var(--focus-and-overlay-transition-duration);
    --shadow-color: 0, 0, 0;
    --shadow-opacity: 0.15;
}

.input {
    z-index: 3;
    grid-area: input;
    padding: var(--main-padding);
    outline: none;
    font-size: var(--text-font-size);
    position: relative;
}

.input-navigation {
    grid-area: input;
    border-radius: var(--input-border-radius);
    display: grid;
    grid-template-areas: "previous . next";
    grid-template-columns: max-content 1fr max-content;

    --input-navigation-shadow-color: black;
    --input-navigation-blur-radius: 6px;
    --input-navigation-spread-radius: -3px;
    --input-navigation-spread-shift: 1px;
    --input-navigation-vertical-shift: -2px; /* For visually centering the lower case labels */
    --input-navigation-arrow-width: 1.5ch;

    --input-navigation-button-vertical-padding: 0px;
    --input-navigation-padding-top: calc(var(--input-navigation-padding) + var(--input-navigation-vertical-shift));
    --input-navigation-padding-bottom: var(--input-navigation-padding);
    --input-navigation-control-height: calc(
        var(--input-navigation-padding-top) + var(--input-navigation-padding-bottom)
        + 2 * var(--input-navigation-button-vertical-padding)
        + var(--button-line-height) * var(--input-navigation-font-size)
    );
}

.input-navigation-previous, .input-navigation-next {
    display: inline-block;
    position: sticky;
    z-index: 4;
    /* The following properties just duplicate the element's natural height, but this way it can be read by JS */
    height: var(--input-navigation-control-height);
    box-sizing: border-box;
    /* */
    transition-property: transform, opacity;
    transition-duration: var(--correction-transition-duration);
    padding: var(--input-navigation-padding-top) var(--input-navigation-padding)
             var(--input-navigation-padding-bottom) var(--input-navigation-padding);
}

.input-navigation-previous.hidden, .input-navigation-next.hidden {
    visibility: hidden; /* display: none exhibits jumping behavior of the page in iOS */
}

.input-navigation-previous {
    grid-area: previous;
    align-self: start;
    top: 0;
    margin-bottom: var(--input-navigation-control-height);
    /* This choice of value for margin-bottom is not particularly meaningful, but we have to set it to *some* value;
    beware that this partly determines the minimum height of the input field (because they are part of the same grid) */
    --input-navigation-direction: -1;
}

.input-navigation-next {
    grid-area: next;
    align-self: end;
    bottom: 0;
    margin-top: var(--input-navigation-control-height);
    /* This choice of value for margin-top is not particularly meaningful, but we have to set it to *some* value;
    beware that this partly determines the minimum height of the input field (because they are part of the same grid) */
    --input-navigation-direction: 1;
}

.input-navigation-previous:not(.active),
.input-navigation-next:not(.active),
.input-navigation.input-navigation-correcting .input-navigation-previous,
.input-navigation.input-navigation-correcting .input-navigation-next {
    transform: translateY(calc(
        var(--input-navigation-direction)
        * (100% + var(--input-navigation-blur-radius) + var(--input-navigation-spread-radius))
    ));
    opacity: 0;
    pointer-events: none;
    /* Setting visibility: hidden (with transition) makes the elements sometimes jump on Safari and iOS; note that the
    "hidden" class had also to be changed because of Safari/iOS bugs - from display: none to visibility: hidden */
}

.input-navigation-previous::before, .input-navigation-next::before {
    content: "";
    display: block;
    position: absolute;
    z-index: -1;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    background-color: var(--input-background-color);
    opacity: 0.95;
}

.input-navigation-previous::before {
    border-radius: var(--input-border-radius) 0;
    box-shadow: var(--input-navigation-spread-shift) var(--input-navigation-spread-shift)
        calc(var(--input-navigation-blur-radius) - var(--input-navigation-spread-shift))
        var(--input-navigation-spread-radius) var(--input-navigation-shadow-color);
}

.input-navigation-next::before {
    border-radius: var(--input-border-radius) var(--input-border-radius) 0 0;
    box-shadow: 0 0 var(--input-navigation-blur-radius)
        var(--input-navigation-spread-radius) var(--input-navigation-shadow-color);
}

.input-navigation button {
    background: none;
    border: none;
    padding: var(--input-navigation-button-vertical-padding) 2px;
    margin: 0;
    color: var(--input-navigation-color);
    font-family: inherit;
    font-size: var(--input-navigation-font-size);
    font-style: italic;
    line-height: var(--button-line-height);
    cursor: pointer;
    position: relative;
    display: flex;
    outline: none;
}

.input-navigation-previous button {
    flex-direction: row-reverse;
}

.input-navigation-next button {
    flex-direction: row;
}

.input-navigation button::before {
    content: "";
    display: block;
    position: absolute;
    height: 1px;
    border-radius: 2px;
    bottom: 0;
    width: calc(100% - var(--input-navigation-arrow-width));
    background-color: var(--input-navigation-color);
    opacity: 0.4;
    transition-property: width, height, opacity;
    transition-duration: var(--button-highlight-duration);
}

.input-navigation-previous button::before {
    right: 0;
}

.input-navigation-next button::before {
    left: 0;
}

.input-navigation button:hover::before {
    opacity: 0.1;
    width: 100%;
    height: 100%;
}

.input-navigation-previous button::after, .input-navigation-next button::after {
    display: inline-block;
    position: relative;
    top: -1px;
}

.input-navigation-previous button::after {
    content: "\02191"; /* Top arrow */
    width: var(--input-navigation-arrow-width);
    text-align: left;
}

.input-navigation-next button::after {
    content: "\02193"; /* Bottom arrow */
    width: var(--input-navigation-arrow-width);
    text-align: right;
}

.input-overlay {
    z-index: 5;
    background-color: var(--overlay-background-color);
    color: var(--overlay-text-color);
    font-size: 24px;
    padding: 18px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.input-overlay:not(.active) {
    transition-property: visibility, opacity;
    transition-duration: var(--focus-and-overlay-transition-duration);
    opacity: 0;
    visibility: hidden;
}

.input-overlay::after {
    display: inline;
}

.input-overlay[data-type=loading]::after {
    content: "Триває завантаження...";
}

.input-overlay[data-type=processing] {
    --background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 2560 1600' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23BBBBBB'%3E%3Cpath d='m405 120.986h-34.651v16h34.651c3.309 0 6 2.691 6 6v183.704h-354v-183.704c0-3.309 2.691-6 6-6h34.651v-16h-34.651c-12.131 0-22 9.869-22 22v235.166c0 12.131 9.869 22 22 22h122.267l-14.852 51.848h-28.777v16h184.723v-16h-28.777l-14.852-51.848h122.268c12.131 0 22-9.869 22-22v-235.166c0-12.131-9.869-22-22-22zm-124.059 331.014h-93.881l14.852-51.848h64.177zm130.059-73.848c0 3.309-2.691 6-6 6h-342c-3.309 0-6-2.691-6-6v-35.462h354z'/%3E%3Cg%3E%3Cg%3E%3Cg%3E%3Cpath d='m94.678 253.881h18.645v16h-18.645z'/%3E%3C/g%3E%3Cg%3E%3Cpath d='m134.678 253.881h18.645v16h-18.645z'/%3E%3C/g%3E%3C/g%3E%3Cg%3E%3Cg%3E%3Cpath d='m314.678 253.881h18.645v16h-18.645z'/%3E%3C/g%3E%3Cg%3E%3Cpath d='m354.678 253.881h18.645v16h-18.645z'/%3E%3C/g%3E%3C/g%3E%3C/g%3E%3Cpath d='m310.414 30.358c-19.929-19.577-47.066-30.358-76.414-30.358s-56.485 10.781-76.414 30.358c-19.916 19.565-30.884 46.157-30.884 74.878 0 30.658 13.528 59.912 37.116 80.262 11.785 10.168 19.294 24.184 21.942 40.765-6.23 4.018-10.365 11.002-10.365 18.934v6.372c0 9.755 6.249 18.08 14.966 21.212-.919 2.451-1.424 5.102-1.424 7.869v6.371c0 12.429 10.143 22.541 22.609 22.541h44.909c12.467 0 22.609-10.112 22.609-22.541v-6.371c0-2.767-.505-5.418-1.424-7.869 8.716-3.131 14.966-11.457 14.966-21.212v-6.372c0-7.932-4.135-14.915-10.365-18.934 2.648-16.581 10.157-30.598 21.942-40.765 23.587-20.35 37.116-49.604 37.116-80.262-.001-28.721-10.969-55.313-30.885-74.878zm-47.35 256.663c0 3.606-2.965 6.541-6.609 6.541h-44.909c-3.645 0-6.609-2.934-6.609-6.541v-6.371c0-3.606 2.965-6.541 6.609-6.541h44.909c3.645 0 6.609 2.934 6.609 6.541zm13.541-35.452c0 3.606-2.965 6.541-6.609 6.541h-71.991c-3.645 0-6.609-2.934-6.609-6.541v-6.372c0-3.154 2.268-5.794 5.275-6.406.002 0 .003-.001.005-.001 1.351-.274.416-.087 73.321-.133 3.751 0 6.564 3.075 6.609 6.734.024 2.058-.001 4.119-.001 6.178zm-64.622-113.243h-11.902c-3.95 0-7.495-2.874-8.231-6.768-.74-3.914 1.527-7.868 5.234-9.28 2.255-.859 5.695-.849 8.07-.408 3.88.721 6.829 4.195 6.829 8.157zm28.512 84.331h-12.512v-68.331h12.512zm53.235-49.273c-14.448 12.466-23.723 29.39-27.117 49.273h-10.118v-68.331h12.119c13.439 0 24.374-10.9 24.374-24.299 0-13.398-10.934-24.298-24.374-24.298h-3.746c-13.439 0-24.374 10.9-24.374 24.298v8.299h-12.512v-8.299c0-13.398-10.934-24.298-24.374-24.298h-3.528c-13.439 0-24.374 10.9-24.374 24.298s10.934 24.299 24.374 24.299h11.902v68.331h-10.596c-3.393-19.883-12.668-36.807-27.117-49.273-20.062-17.308-31.568-42.147-31.568-68.147.001-50.874 39.251-89.237 91.299-89.237s91.298 38.363 91.298 89.236c0 26.001-11.506 50.84-31.568 68.148zm-37.235-35.058v-8.299c0-4.576 3.756-8.298 8.374-8.298h3.746c4.617 0 8.374 3.723 8.374 8.298 0 4.576-3.756 8.299-8.374 8.299z'/%3E%3C/g%3E%3C/svg%3E");
    background-image: var(--background-image), var(--background-image);
    background-size: 160px 100px, 160px 100px;
    background-repeat: repeat, repeat;
    background-position: 95px 15px, 15px 65px;
}

.input:focus ~ .input-bg {
    --shadow-color: var(--blue);
    --shadow-opacity: 0.6;
}

.input-store {
    display: none;
}

.input {
    --input-initial-button-padding: 0.5ch;
}

initial-buttons-prefix {
    margin-right: calc(1.5 * var(--input-initial-button-padding)); /* Extra 0.5 is for the gap after the text */
}

initial-buttons-prefix::after {
    /* This ridiculous hack is needed so that Safari stops thinking that the current line has an infinite width */
    content: "";
    display: inline;
}

initial-buttons-container {
    white-space: nowrap;
    display: inline-block;
}

.input-initial-button {
    background: none;
    border: none;
    cursor: pointer;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    padding: 0 var(--input-initial-button-padding);
    /* This way when a button is at the beginning of a line, it doesn't have a visible left margin */
    margin: 0 var(--input-initial-button-padding) 0 calc(0px - var(--input-initial-button-padding));
}

.input-initial-button:last-child {
    margin-right: 0;
}

.input-initial-button svg {
    height: calc(0.75 * var(--text-font-size));
    fill: var(--background-text-color);
    transition: fill var(--button-highlight-duration);
}

.input-initial-button:hover svg, .input-initial-button:focus svg {
    fill: var(--text-color);
}